data class Post(
    val date: String, // время публикации записи
    val text: String, // текст записи
    val ownerId: Long = 0, // идентификатор владельца стены, на которой размещена запись
    val fromId: Long = 0, // идентификатор автора записи (от чьего имени опубликована запись)
    val createdBy: Long? = null, // идентификатор администратора, который опубликовал запись
    val replyOwnerId: Long? = null, // идентификатор владельца записи, в ответ на которую была оставлена текущая
    val replyPostId: Long? = null, // идентификатор записи, в ответ на которую была оставлена текущая
    val friendsOnly: Boolean = false, // true, если запись была создана с опцией «Только для друзей»
    val comments: Int? = null, // информация о комментариях к записи
    val copyright: String? = null, // источник материала
    val likes: Int = 0, // информация о лайках к записи
    val reposts: Int = 0, // информация о репостах записи («Рассказать друзьям»)
    val views: Int = 0, // информация о просмотрах записи
    val postType: String = "post", // тип записи, может принимать следующие значения: post, copy, reply, postpone, suggest
    val signerId: Long? = null, // идентификатор автора, если запись была опубликована от имени сообщества
    val canPin: Boolean = false, // информация о том, может ли текущий пользователь закрепить запись
    val canDelete: Boolean = true, // информация о том, может ли текущий пользователь удалить запись
    val canEdit: Boolean = false, // информация о том, может ли текущий пользователь редактировать запись
    val isPinned: Boolean? = null, // информация о том, что запись закреплена
    val markedAsAds: Boolean? = null, // информация о том, содержит ли запись отметку "реклама"
    val isFavorite: Boolean? = null, // true, если объект добавлен в закладки у текущего пользователя
    val donut: Boolean? = null, // информация о записи Донат
    val postponedId: Long? = null, // идентификатор отложенной записи. Возвращается тогда, когда запись стояла на таймере
    val id: Int? = null, // идентификатор записи
    val postSource: Any? = null, //информация о способе размещения записи
    val geo: Any? = null,
    // информация о местоположении, содержит поля: type (string) — тип места; coordinates (string)
    // - координаты места; place (object) — описание места (если оно добавлено). Объект места.
    val copyHistory: Any? = null,
    // массив, содержащий историю репостов для записи. Возвращается только в том случае,
    // если запись является репостом. Каждый из объектов массива, в свою очередь,
    // является объектом-записью стандартного формата.
    val attachment: Attachment? = null) {
}